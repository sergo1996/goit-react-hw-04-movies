{"version":3,"sources":["Components/Reviews.js"],"names":["Reviews","state","reviews","movieId","this","props","match","params","movId","movieAPI","fetchReviews","then","resp","setState","results","length","map","review","key","id","author","content","Component"],"mappings":"iPAGqBA,E,4MACnBC,MAAQ,CACNC,QAAS,I,kEAGU,IAAD,OACZC,EAAUC,KAAKC,MAAMC,MAAMC,OAAOC,MAExCC,IACGC,aAAaP,GACbQ,MAAK,SAACC,GAAD,OAAU,EAAKC,SAAS,CAAEX,QAASU,EAAKE,e,+BAGxC,IACAZ,EAAYE,KAAKH,MAAjBC,QACR,OAAOA,EAAQa,OAAS,EACtB,oCACE,uCACA,4BACGb,EAAQc,KAAI,SAACC,GAAD,OACX,wBAAIC,IAAKD,EAAOE,IACd,4BAAKF,EAAOG,QACZ,2BAAIH,EAAOI,eAMnB,0D,GA5B+BC","file":"static/js/movie_reviews.8b197485.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport movieAPI from \"../services/movieAPI\";\r\n\r\nexport default class Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  componentDidMount() {\r\n    const movieId = this.props.match.params.movId;\r\n\r\n    movieAPI\r\n      .fetchReviews(movieId)\r\n      .then((resp) => this.setState({ reviews: resp.results }));\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return reviews.length > 0 ? (\r\n      <>\r\n        <h2>Reviews</h2>\r\n        <ul>\r\n          {reviews.map((review) => (\r\n            <li key={review.id}>\r\n              <h5>{review.author}</h5>\r\n              <p>{review.content}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    ) : (\r\n      <p>There are no reviews...</p>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}